# description:  Will add FSLogix SW to a running VM (via custom script extension)
# dependson: there must be an existing host pool with running vms
# owner: bfrank
#########################

name: 'AVD PoC FSLogix GPO setup with classic DC pipeline'

parameters:
  - name: groupSelection
    displayName: Deployment environment variable file to use
    type: string
    values:
    - ..\yourenvfile.pipeline.variables.yml
    #- ..\otherenvironment.pipeline.variables.yml            # modify, rename and uncomment if 2nd... environment file
  - name: OUSuffix
    displayName: The upper OU path snippet to apply the GPO to
    default: OU=HostPool1,OU=AVD
  - name: storageAccountName
    displayName: The storageaccount name that holds the fslogix profile share
    default: saavdprofiles...
  - name: profileShareName
    displayName: The name of the profile share
    default: avdprofiles

variables:
 - template: ${{ parameters.groupSelection }} #based on user input (see parameter above) we select the ...variables.yml file which defines the target environment 

trigger: none

stages:
  - stage: Publish
    displayName: Publish
    jobs:
      - job: PublishJob
        displayName: Copy and publish artefacts
        steps:
          - task: CopyFiles@2
            displayName: Copy ARM templates
            inputs:
              sourceFolder: pipelines/fslogix
              contents: |
                **/pipelines/fslogix/setupartefacts/**
                **/fslogix/setupartefacts/**
                **/setupartefacts/**
                **\pipelines\fslogix\setupartefacts\**
                **\fslogix\setupartefacts\**
                **\setupartefacts\**
                *.json
              targetFolder: $(Build.ArtifactStagingDirectory)/${{ variables.artifactDropName }}
          - task: PublishPipelineArtifact@1
            displayName: Publish artefacts
            inputs:
              targetPath: "$(Build.ArtifactStagingDirectory)/${{ variables.artifactDropName }}"
              artifact: ${{ variables.artifactDropName }}

  - stage: DeployARM
    displayName: ARM Deployments
    jobs:
      - job:
        displayName: Deploy GPO on dc to use for FSLogix and Windows Defender
      - deployment: Deploy
        environment: $(azureResourceManagerConnection)
        pool:
          vmImage: windows-latest
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureResourceGroupDeployment@2
                  displayName: Deploy storage account for FSLOGIX setup artefacts (PowerShell scripts) via ARM template
                  inputs:
                    azureSubscription: $(azureResourceManagerConnection)
                    action: "Create Or Update Resource Group"
                    resourceGroupName: $(rgForSharedResources)
                    location: $(location)
                    templateLocation: "Linked artifact"
                    csmFile: $(Pipeline.Workspace)/${{ variables.artifactDropName }}/artefactsstorageaccount.json
                    overrideParameters: '-saPrefix "$(saPrefix)"'
                    deploymentOutputs: "armOutputs"
              
                - task: PowerShell@2
                  displayName: Prepare pipeline variables - SAS token to storage account
                  inputs:
                    targetType: "inline"
                    script: |
                      # Write your PowerShell commands here.
                      $var=ConvertFrom-Json '$(armOutputs)'
                      $value=$var.saName.value

                      Write-Host "storage account variable"
                      Write-Host "##vso[task.setvariable variable=SANAME;]$value"

                      $sasvalue=$var.serviceSas.value

                      Write-Host "SAS token from ARM output stored in variable SAS"
                      Write-Host "##vso[task.setvariable variable=SAS;]$sasvalue"

                - task: AzureFileCopy@4
                  displayName: Copy setup artefacts to storage account
                  inputs:
                    SourcePath: "$(Pipeline.Workspace)/${{ variables.artifactDropName }}/setupartefacts"
                    azureSubscription: $(azureResourceManagerConnection)
                    Destination: "AzureBlob"
                    storage: $(SANAME)
                    ContainerName: setupartefacts
                    cleanTargetBeforeCopy: true

                - task: AzurePowerShell@5
                  displayName: Add fslogix gpo using custom script extensions
                  inputs:
                    azureSubscription: $(azureResourceManagerConnection)
                    ScriptType: "InlineScript"
                    errorActionPreference: "stop"
                    azurePowerShellVersion: "LatestVersion"
                    Inline: |
                      write-output "adding FSLogix GPO on DC"

                      $URI = "https://$(SANAME).blob.core.windows.net/setupartefacts/setupartefacts/cse_ad_fslogixgpo.ps1?$(SAS)"
                      write-output "$URI"

                      write-output "adding gpo on: $(dcName)"

                      $arguments = "-OUSuffix ${{ parameters.OUSuffix }} -storageAccountName ${{ parameters.storageAccountName }} -profileShareName ${{ parameters.profileShareName }}"
                      Write-Output "with arguments: $arguments"

                      $vmres = Get-AzResource -Name "$(dcName)" -ResourceType 'Microsoft.Compute/virtualMachines'
                      Set-AzVMCustomScriptExtension -Name 'fslogixgpo' -VMName "$(dcName)" -ResourceGroupName "$($vmres.ResourceGroupName)" -Location "$($vmres.Location)" -Run './setupartefacts/cse_ad_fslogixgpo.ps1' -FileUri "$URI" -Argument "$arguments"
                      Remove-AzVMCustomScriptExtension -Name 'fslogixgpo' -VMName "$(dcName)" -ResourceGroupName "$($vmres.ResourceGroupName)" -Force
